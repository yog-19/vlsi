module router_fsm_tb();
reg clock,resetn,pkt_valid,parity_done,soft_reset_0,soft_reset_1,soft_reset_2,low_pkt_valid,
 fifo_full,fifo_empty_0,fifo_empty_1,fifo_empty_2;
reg [1:0]data_in; 
wire detect_add,ld_state,laf_state,full_state,write_enb_reg,rst_int_reg,lfd_state,busy;
router_fsm DUT 
(clock,resetn,pkt_valid,parity_done,soft_reset_0,soft_reset_1,soft_reset_2,low_pkt_valid,
 
fifo_full,fifo_empty_0,fifo_empty_1,fifo_empty_2,data_in,detect_add,ld_state,laf_state,full_state,wr
ite_enb_reg,rst_int_reg,lfd_state,busy);
initial
begin
clock = 1'b0;
forever #10 clock = ~clock;
end
task initialize();
 begin
 {clock,resetn,pkt_valid,parity_done} = 4'b0000;
 {soft_reset_0,soft_reset_1,soft_reset_2 }= 3'b000;
 low_pkt_valid=1'b1;
 fifo_full = 0;
 data_in = 2'b00;
 {fifo_empty_0,fifo_empty_1,fifo_empty_2} = 3'b111;
 end
endtask
task rstn();
 begin
 @(negedge clock)
 resetn = 1'b0;
 @(negedge clock)
 resetn = 1'b1;
 end
endtask
task DA_LFD_LD_LP_CPE_DA();
begin
#20;
pkt_valid = 1'b1;
data_in = 2'b00;
fifo_empty_0 = 1'b1;
#20;
fifo_full = 1'b0;
pkt_valid = 1'b0;
#30;
fifo_full = 1'b0;
end
endtask
task DA_LFD_LD_FFS_LAF_LP_CPE_DA();
begin
#30;
pkt_valid = 1'b1;
data_in = 2'b01;
fifo_empty_1 = 1'b1;
#20;
fifo_full = 1'b1;
#20;
fifo_full = 1'b0;
#20;
parity_done = 1'b0;
low_pkt_valid = 1'b1;
#20;
fifo_full = 1'b0;
end 
endtask
task DA_LFD_LD_FFS_LAF_LD_LP_CPE_DA();
begin
#20;
pkt_valid = 1'b1;
data_in = 2'b10;
fifo_empty_2 = 1'b1;
#30;
fifo_full = 1'b1;
#30;
fifo_full = 1'b0;
#30;
parity_done = 1'b0;
low_pkt_valid = 1'b0;
#20;
fifo_full = 1'b0;
pkt_valid = 1'b0;
#20;
fifo_full = 1'b0;
end
endtask
task DA_LFD_LD_LP_CPE_FFS_LAF_DA();
begin
#20;
pkt_valid = 1'b1;
data_in = 2'b10;
fifo_empty_2 = 1'b1;
#30;
fifo_full = 1'b0;
pkt_valid = 1'b0;
#20;
fifo_full = 1'b1;
#30;
fifo_full = 1'b0;
#30;
parity_done = 1'b1;
end
endtask
 initial 
 begin
 initialize;
 rstn;
 #20 DA_LFD_LD_LP_CPE_DA;
 #30 DA_LFD_LD_FFS_LAF_LP_CPE_DA;
 #40 DA_LFD_LD_FFS_LAF_LD_LP_CPE_DA;
 #50 DA_LFD_LD_LP_CPE_FFS_LAF_DA;
 #500 $finish;
 end
 endmodule